#This is the basics of python 

#Here's a comprehensive reference guide for Python basic syntax and operators, formatted as a GitHub README. This guide includes single-line comments, multi-line comments, arithmetic operators, += operator usage, multi-line code blocks, and an example of ASCII art.
#Python Basic Syntax and Operators Guide

#This guide covers the foundational syntax and operations in Python, including examples and explanations. It’s designed as a reference for newcomers and those refreshing their Python basics.
#Table of Contents

    #Hello World!
    #Using print() in Different Ways
    #Math Operators
    #Using += Operator
    #Multi-line Comments
    #Multi-line Code Blocks
    #ASCII Block Lettering

____________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________

#1. Hello World!

#The "Hello, World!" program is often the first step in learning any language. Here’s how to print "Hello, World!" in Python:

#Example: "Hello World!" in Python
print("Hello, World!")  # This is the simplest way to print text in Python.

_______________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________

2. Using print() in Different Ways

The print() function can display text, variables, and multiple arguments.

print("Hello, Python!")  # Using double quotes for strings
print('Hello, Single Quotes!')  # Using single quotes for strings
print("Hello,", "Multiple", "Arguments!")  # Passing multiple arguments separated by commas

_______________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________
#3. Math Operators

#Python has various math operators for basic arithmetic. Here’s a quick overview:

a = 10
b = 5

# Addition
print("Addition:", a + b)  # Adds 10 and 5, expected output: 15

# Subtraction
print("Subtraction:", a - b)  # Subtracts 5 from 10, expected output: 5

# Multiplication
print("Multiplication:", a * b)  # Multiplies 10 by 5, expected output: 50

# Division
print("Division:", a / b)  # Divides 10 by 5, expected output: 2.0

# Exponentiation
print("Exponentiation:", a ** b)  # Raises 10 to the power of 5, expected output: 100000

# Modulo
print("Modulo:", a % b)  # Finds the remainder of 10 divided by 5, expected output: 0

# Floor Division
print("Floor Division:", a // b)  # Divides 10 by 5 and rounds down, expected output: 2


_______________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________

#4. Using += Operator

#The += operator is a shorthand for adding a value to a variable.

counter = 0
print("Initial Counter:", counter)  # Initial value of counter

# Adding 5 to counter
counter += 5  # This is shorthand for counter = counter + 5
print("After += 5:", counter)  # Expected output: 5

# Adding another 10 to counter
counter += 10
print("After += 10:", counter)  # Expected output: 15


_______________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________
#5. Multi-line Comments

#Python uses triple quotes for multi-line comments, often used for longer explanations or docstrings.

"""
Multi-line Comment:
In Python, triple quotes (''' or """) are used to create multi-line comments.
These comments help explain sections of code in detail.
"""

_______________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________

#6. Multi-line Code Blocks

#For readability, long expressions can be split across multiple lines using the backslash \.

# Multi-line code block using the backslash for continuation
result = 1 + 2 + 3 + 4 + 5 + \
         6 + 7 + 8 + 9 + 10  # Adding up numbers from 1 to 10
print("Result of multi-line addition:", result)  # Expected output: 55

# Another example with complex operations
a = 20
b = 3
total = a * 5 + b * 3 + \
        (a - b) / 2  # Combining operations using continuation
print("Complex calculation:", total)

_______________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________
#7. ASCII Block Lettering

Using triple quotes """ """ allows for creative multi-line strings like ASCII art.

print("""
  H   H  EEEEE  L      L       OOO       W   W   OOO   RRRR   L      DDDD  
  H   H  E      L      L      O   O      W   W  O   O  R   R  L      D   D 
  HHHHH  EEEE   L      L      O   O      W W W  O   O  RRRR   L      D   D 
  H   H  E      L      L      O   O      W W W  O   O  R  R   L      D   D 
  H   H  EEEEE  LLLLL  LLLLL   OOO        W W    OOO   R   R  LLLLL  DDDD  
""")

